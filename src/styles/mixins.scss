@mixin take-to-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-align-justify-spacebw {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-align-center {
  display: flex;
  align-items: center;
}

@mixin put-on-circle($count, $radius, $angle, $initialRotation) {
  $rot: $initialRotation;

  @for $i from 1 through $count {
    > :nth-of-type(#{$i}) {
      @include take-to-center();
      transform: translate(-50%, -50%)
        rotate($rot * 1deg)
        translateX($radius)
        rotate($rot * -1deg);
    }

    $rot: $rot + $angle;
  }
}

@mixin for-mobile-only {
  @media screen and (max-width: 549) {
    @content;
  }
}

@mixin for-tablet-or-mobile {
  @media screen and (max-width: 999px) {
    @content;
  }
}

@mixin for-small-desktop {
  @media screen and (min-width: 1000px) and (max-width: 1299px) {
    @content;
  }
}

@mixin for-medium-desktop {
  @media screen and (min-width: 1300px) and (max-width: 1599px) {
    @content;
  }
}

@mixin for-large-desktop {
  @media screen and (min-width: 1600px) {
    @content;
  }
}

@mixin responsive-width {
  width: var(--big-desktop-content-width);

  @include for-small-desktop {
    width: var(--small-desktop-content-width);
  }

  @include for-medium-desktop {
    width: var(--medium-desktop-content-width);
  }

  margin: 0 auto;
  background: inherit;
}

@mixin nav-footer {
  @include responsive-width;
  @include flex-align-center;
  justify-content: space-between;
  padding: 30px 0;
}

@mixin gradient-two-colors($breakPoint, $firstColor, $secondColor) {
  $breakPointPercentage: percentage(calc($breakPoint / 100));

  background: linear-gradient(
    to right,
    $firstColor 0 $breakPointPercentage,
    $secondColor $breakPointPercentage 100%
  );
}
